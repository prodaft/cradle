/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
    "./public/**/*.{js,ts,jsx,tsx,html}",
  ],
  theme: {
    extend: {
      colors: {
        // Override default Tailwind colors with RSuite theme variables
        gray: {
          0: 'var(--rs-gray-0)',
          50: 'var(--rs-gray-50)',
          100: 'var(--rs-gray-100)',
          200: 'var(--rs-gray-200)',
          300: 'var(--rs-gray-300)',
          400: 'var(--rs-gray-400)',
          500: 'var(--rs-gray-500)',
          600: 'var(--rs-gray-600)',
          700: 'var(--rs-gray-700)',
          800: 'var(--rs-gray-800)',
          900: 'var(--rs-gray-900)',
        },
        primary: {
          50: 'var(--rs-primary-50)',
          100: 'var(--rs-primary-100)',
          200: 'var(--rs-primary-200)',
          300: 'var(--rs-primary-300)',
          400: 'var(--rs-primary-400)',
          500: 'var(--rs-primary-500)',
          600: 'var(--rs-primary-600)',
          700: 'var(--rs-primary-700)',
          800: 'var(--rs-primary-800)',
          900: 'var(--rs-primary-900)',
        },
        red: {
          50: 'var(--rs-red-50)',
          100: 'var(--rs-red-100)',
          200: 'var(--rs-red-200)',
          300: 'var(--rs-red-300)',
          400: 'var(--rs-red-400)',
          500: 'var(--rs-red-500)',
          600: 'var(--rs-red-600)',
          700: 'var(--rs-red-700)',
          800: 'var(--rs-red-800)',
          900: 'var(--rs-red-900)',
        },
        orange: {
          50: 'var(--rs-orange-50)',
          100: 'var(--rs-orange-100)',
          200: 'var(--rs-orange-200)',
          300: 'var(--rs-orange-300)',
          400: 'var(--rs-orange-400)',
          500: 'var(--rs-orange-500)',
          600: 'var(--rs-orange-600)',
          700: 'var(--rs-orange-700)',
          800: 'var(--rs-orange-800)',
          900: 'var(--rs-orange-900)',
        },
        yellow: {
          50: 'var(--rs-yellow-50)',
          100: 'var(--rs-yellow-100)',
          200: 'var(--rs-yellow-200)',
          300: 'var(--rs-yellow-300)',
          400: 'var(--rs-yellow-400)',
          500: 'var(--rs-yellow-500)',
          600: 'var(--rs-yellow-600)',
          700: 'var(--rs-yellow-700)',
          800: 'var(--rs-yellow-800)',
          900: 'var(--rs-yellow-900)',
        },
        green: {
          50: 'var(--rs-green-50)',
          100: 'var(--rs-green-100)',
          200: 'var(--rs-green-200)',
          300: 'var(--rs-green-300)',
          400: 'var(--rs-green-400)',
          500: 'var(--rs-green-500)',
          600: 'var(--rs-green-600)',
          700: 'var(--rs-green-700)',
          800: 'var(--rs-green-800)',
          900: 'var(--rs-green-900)',
        },
        blue: {
          50: 'var(--rs-blue-50)',
          100: 'var(--rs-blue-100)',
          200: 'var(--rs-blue-200)',
          300: 'var(--rs-blue-300)',
          400: 'var(--rs-blue-400)',
          500: 'var(--rs-blue-500)',
          600: 'var(--rs-blue-600)',
          700: 'var(--rs-blue-700)',
          800: 'var(--rs-blue-800)',
          900: 'var(--rs-blue-900)',
        },
        cyan: {
          50: 'var(--rs-cyan-50)',
          100: 'var(--rs-cyan-100)',
          200: 'var(--rs-cyan-200)',
          300: 'var(--rs-cyan-300)',
          400: 'var(--rs-cyan-400)',
          500: 'var(--rs-cyan-500)',
          600: 'var(--rs-cyan-600)',
          700: 'var(--rs-cyan-700)',
          800: 'var(--rs-cyan-800)',
          900: 'var(--rs-cyan-900)',
        },
        violet: {
          50: 'var(--rs-violet-50)',
          100: 'var(--rs-violet-100)',
          200: 'var(--rs-violet-200)',
          300: 'var(--rs-violet-300)',
          400: 'var(--rs-violet-400)',
          500: 'var(--rs-violet-500)',
          600: 'var(--rs-violet-600)',
          700: 'var(--rs-violet-700)',
          800: 'var(--rs-violet-800)',
          900: 'var(--rs-violet-900)',
        },
        
        // Semantic colors using RSuite's semantic variables
        success: 'var(--rs-state-success)',
        warning: 'var(--rs-state-warning)',
        error: 'var(--rs-state-error)',
        info: 'var(--rs-state-info)',

        // Background colors using RSuite's background variables
        background: 'var(--rs-body)',
        card: 'var(--rs-bg-card)',
        overlay: 'var(--rs-bg-overlay)',
        well: 'var(--rs-bg-well)',
        active: 'var(--rs-bg-active)',

        // Text colors using RSuite's text variables  
        foreground: 'var(--rs-text-primary)',
        'text-primary': 'var(--rs-text-primary)',
        'text-secondary': 'var(--rs-text-secondary)',
        'text-tertiary': 'var(--rs-text-tertiary)',
        'text-heading': 'var(--rs-text-heading)',
        'text-inverse': 'var(--rs-text-inverse)',
        'text-disabled': 'var(--rs-text-disabled)',
        'muted-foreground': 'var(--rs-text-secondary)',

        // Border colors using RSuite's border variables
        border: 'var(--rs-border-primary)',
        'border-primary': 'var(--rs-border-primary)',
        'border-secondary': 'var(--rs-border-secondary)',

        // Additional semantic mappings
        accent: 'var(--rs-primary-500)',
        'accent-foreground': 'var(--rs-gray-0)',
      },
    },
  },
  plugins: [],
};

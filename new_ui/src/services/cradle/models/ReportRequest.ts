/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.7.0 (2.7.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportRequest
 */
export interface ReportRequest {
    /**
     * 
     * @type {string}
     * @memberof ReportRequest
     */
    title?: string;
    /**
     * * `working` - Working
     * * `done` - Done
     * * `error` - Error
     * @type {string}
     * @memberof ReportRequest
     */
    status?: ReportRequestStatusEnum;
    /**
     * 
     * @type {boolean}
     * @memberof ReportRequest
     */
    anonymized?: boolean;
    /**
     * * `catalyst` - Catalyst
     * * `html` - HTML
     * * `plain` - Plain Text
     * * `json` - JSON
     * @type {string}
     * @memberof ReportRequest
     */
    strategy: ReportRequestStrategyEnum;
    /**
     * 
     * @type {string}
     * @memberof ReportRequest
     */
    errorMessage?: string | null;
    /**
     * 
     * @type {any}
     * @memberof ReportRequest
     */
    extraData?: any | null;
}


/**
 * @export
 */
export const ReportRequestStatusEnum = {
    Working: 'working',
    Done: 'done',
    Error: 'error'
} as const;
export type ReportRequestStatusEnum = typeof ReportRequestStatusEnum[keyof typeof ReportRequestStatusEnum];

/**
 * @export
 */
export const ReportRequestStrategyEnum = {
    Catalyst: 'catalyst',
    Html: 'html',
    Plain: 'plain',
    Json: 'json'
} as const;
export type ReportRequestStrategyEnum = typeof ReportRequestStrategyEnum[keyof typeof ReportRequestStrategyEnum];


/**
 * Check if a given object implements the ReportRequest interface.
 */
export function instanceOfReportRequest(value: object): value is ReportRequest {
    if (!('strategy' in value) || value['strategy'] === undefined) return false;
    return true;
}

export function ReportRequestFromJSON(json: any): ReportRequest {
    return ReportRequestFromJSONTyped(json, false);
}

export function ReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'status': json['status'] == null ? undefined : json['status'],
        'anonymized': json['anonymized'] == null ? undefined : json['anonymized'],
        'strategy': json['strategy'],
        'errorMessage': json['error_message'] == null ? undefined : json['error_message'],
        'extraData': json['extra_data'] == null ? undefined : json['extra_data'],
    };
}

export function ReportRequestToJSON(json: any): ReportRequest {
    return ReportRequestToJSONTyped(json, false);
}

export function ReportRequestToJSONTyped(value?: ReportRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'status': value['status'],
        'anonymized': value['anonymized'],
        'strategy': value['strategy'],
        'error_message': value['errorMessage'],
        'extra_data': value['extraData'],
    };
}


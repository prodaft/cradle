/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.7.0 (2.7.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntryClassRequest
 */
export interface EntryClassRequest {
    /**
     * * `entity` - Entity
     * * `artifact` - Artifact
     * @type {string}
     * @memberof EntryClassRequest
     */
    type: EntryClassRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    subtype: string;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    generativeRegex?: string;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    regex?: string;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    options?: string;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    prefix?: string;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    color?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof EntryClassRequest
     */
    children?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof EntryClassRequest
     */
    format: string | null;
}


/**
 * @export
 */
export const EntryClassRequestTypeEnum = {
    Entity: 'entity',
    Artifact: 'artifact'
} as const;
export type EntryClassRequestTypeEnum = typeof EntryClassRequestTypeEnum[keyof typeof EntryClassRequestTypeEnum];


/**
 * Check if a given object implements the EntryClassRequest interface.
 */
export function instanceOfEntryClassRequest(value: object): value is EntryClassRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('subtype' in value) || value['subtype'] === undefined) return false;
    if (!('format' in value) || value['format'] === undefined) return false;
    return true;
}

export function EntryClassRequestFromJSON(json: any): EntryClassRequest {
    return EntryClassRequestFromJSONTyped(json, false);
}

export function EntryClassRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntryClassRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'subtype': json['subtype'],
        'description': json['description'] == null ? undefined : json['description'],
        'generativeRegex': json['generative_regex'] == null ? undefined : json['generative_regex'],
        'regex': json['regex'] == null ? undefined : json['regex'],
        'options': json['options'] == null ? undefined : json['options'],
        'prefix': json['prefix'] == null ? undefined : json['prefix'],
        'color': json['color'] == null ? undefined : json['color'],
        'children': json['children'] == null ? undefined : json['children'],
        'format': json['format'],
    };
}

export function EntryClassRequestToJSON(json: any): EntryClassRequest {
    return EntryClassRequestToJSONTyped(json, false);
}

export function EntryClassRequestToJSONTyped(value?: EntryClassRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'subtype': value['subtype'],
        'description': value['description'],
        'generative_regex': value['generativeRegex'],
        'regex': value['regex'],
        'options': value['options'],
        'prefix': value['prefix'],
        'color': value['color'],
        'children': value['children'],
        'format': value['format'],
    };
}


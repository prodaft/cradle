/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.7.0 (2.7.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileReference } from './FileReference';
import {
    FileReferenceFromJSON,
    FileReferenceFromJSONTyped,
    FileReferenceToJSON,
    FileReferenceToJSONTyped,
} from './FileReference';

/**
 * Serializer for fleeting notes. This bypasses the normal note processing pipeline
 * and is used for quick note taking without entity references.
 * @export
 * @interface FleetingNote
 */
export interface FleetingNote {
    /**
     * 
     * @type {string}
     * @memberof FleetingNote
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof FleetingNote
     */
    content: string;
    /**
     * 
     * @type {Date}
     * @memberof FleetingNote
     */
    readonly timestamp?: Date;
    /**
     * 
     * @type {Array<FileReference>}
     * @memberof FleetingNote
     */
    files?: Array<FileReference>;
}

/**
 * Check if a given object implements the FleetingNote interface.
 */
export function instanceOfFleetingNote(value: object): value is FleetingNote {
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function FleetingNoteFromJSON(json: any): FleetingNote {
    return FleetingNoteFromJSONTyped(json, false);
}

export function FleetingNoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): FleetingNote {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'content': json['content'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileReferenceFromJSON)),
    };
}

export function FleetingNoteToJSON(json: any): FleetingNote {
    return FleetingNoteToJSONTyped(json, false);
}

export function FleetingNoteToJSONTyped(value?: Omit<FleetingNote, 'id'|'timestamp'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(FileReferenceToJSON)),
    };
}


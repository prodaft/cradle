/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.7.0 (2.7.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PublishReportRequest
 */
export interface PublishReportRequest {
    /**
     * List of note IDs to publish.
     * @type {Array<string>}
     * @memberof PublishReportRequest
     */
    noteIds: Array<string>;
    /**
     * Title for the published report.
     * @type {string}
     * @memberof PublishReportRequest
     */
    title: string;
    /**
     * Name of the strategy to use.
     * @type {string}
     * @memberof PublishReportRequest
     */
    strategy: string;
    /**
     * Whether the report should be anonymized.
     * @type {boolean}
     * @memberof PublishReportRequest
     */
    anonymized?: boolean;
}

/**
 * Check if a given object implements the PublishReportRequest interface.
 */
export function instanceOfPublishReportRequest(value: object): value is PublishReportRequest {
    if (!('noteIds' in value) || value['noteIds'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('strategy' in value) || value['strategy'] === undefined) return false;
    return true;
}

export function PublishReportRequestFromJSON(json: any): PublishReportRequest {
    return PublishReportRequestFromJSONTyped(json, false);
}

export function PublishReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublishReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'noteIds': json['note_ids'],
        'title': json['title'],
        'strategy': json['strategy'],
        'anonymized': json['anonymized'] == null ? undefined : json['anonymized'],
    };
}

export function PublishReportRequestToJSON(json: any): PublishReportRequest {
    return PublishReportRequestToJSONTyped(json, false);
}

export function PublishReportRequestToJSONTyped(value?: PublishReportRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'note_ids': value['noteIds'],
        'title': value['title'],
        'strategy': value['strategy'],
        'anonymized': value['anonymized'],
    };
}


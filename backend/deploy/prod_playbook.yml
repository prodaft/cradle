---
- name: Deploy current project and manage Nginx
  hosts: prod
  vars:
    local_project_path: "{{ lookup('env', 'PWD') }}"
    project_name: "{{ local_project_path | basename }}"
    project_domain_name: "cradle"
    remote_project_path: "/home/ubuntu/{{ project_name }}"
    tarball_name: "{{ project_name }}.tar.gz"
    nginx_config_src: "{{ local_project_path }}/deploy/nginx.conf"
    nginx_config_dest: "/etc/nginx/conf.d/cradle.conf"
  tasks:
    - name: Display paths and project info
      ansible.builtin.debug:
        msg:
          - "Local project path: {{ local_project_path }}"
          - "Project name: {{ project_name }}"
          - "Remote project path: {{ remote_project_path }}"
          - "Nginx configuration source: {{ nginx_config_src }}"
          - "Nginx configuration destination: {{ nginx_config_dest }}"

    - name: Ensure Nginx is installed
      ansible.builtin.package:
        name: nginx
        state: present
      become: yes

    - name: Ensure Nginx service is running and enabled
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: yes
      become: yes

    - name: Create a tarball of the project locally
      ansible.builtin.command:
        cmd: "tar -czf /tmp/{{ tarball_name }} -C {{ local_project_path }} ."
      delegate_to: localhost

    - name: Copy the tarball to the remote host
      ansible.builtin.copy:
        src: "/tmp/{{ tarball_name }}"
        dest: "/tmp/{{ tarball_name }}"

    - name: Ensure target directory exists on remote host
      ansible.builtin.file:
        path: "{{ remote_project_path }}"
        state: directory
        mode: '0755'

    - name: Extract the tarball on the remote host
      ansible.builtin.shell: |
        tar -xzf /tmp/{{ tarball_name }} -C {{ remote_project_path }}
        rm -f /tmp/{{ tarball_name }}
      args:
        executable: /bin/bash

    - name: Deploy Nginx configuration file
      ansible.builtin.copy:
        src: "{{ nginx_config_src }}"
        dest: "{{ nginx_config_dest }}"
        owner: root
        group: root
        mode: '0644'
      become: yes

    - name: Test Nginx configuration
      ansible.builtin.command:
        cmd: "nginx -t"
      become: yes
      register: nginx_test_result
      failed_when: nginx_test_result.rc != 0

    - name: Reload Nginx to apply new configuration
      ansible.builtin.service:
        name: nginx
        state: reloaded
      become: yes

    - name: Run Docker Compose to start services
      ansible.builtin.shell: |
        cd {{ remote_project_path }}
        sudo docker compose -f ./docker-compose_prod.yml up -d
      args:
        chdir: "{{ remote_project_path }}"
      become: yes


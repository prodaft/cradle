# Reference: https://stackoverflow.com/questions/55359804/gitlab-ci-npm-doesnt-like-the-cached-node-modules

image: node:20.12.2

stages:
  - build
  - lint
  - test

cache:
  - &global_cache_node_mods
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
    policy: pull  # prevent subsequent jobs from modifying cache

install:
  stage: .pre
  cache:
    # Mimic &global_cache_node_mods config but override policy
    # to allow this job to update the cache at the end of the job
    # and only update if it was a successful job
    - <<: *global_cache_node_mods
      when: on_success
      policy: pull-push

    - key: ${CI_JOB_NAME}
      paths:
        - .npm/
      when: on_success
      policy: pull-push

  script:
    # - npm ls --depth=0 # for debugging
    - npm ci --cache .npm --prefer-offline

  artifacts:
    paths:
      # Artifact node_modules for subsequent jobs
      - node_modules/
    expire_in: 2 days

run-build:
  stage: build
  needs:
    - job: install
      artifacts: true
  script:
    # - npm ls --depth=0 # for debugging
    - npm run build
    - npm run tailwind
  artifacts:
    paths:
      - out/
    expire_in: 2 days

run-lint:
  stage: lint
  needs:
    - job: install
      artifacts: true
    - job: run-build
      artifacts: true 
  script:
  # - npm ls --depth=0 # for debugging
    - npx eslint ./
  allow_failure: true

run-test:
  stage: test
  needs:
    - job: install
      artifacts: true
    - job: run-build
      artifacts: true
  script:
    # - npm ls --depth=0 # for debugging
    - npm test
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

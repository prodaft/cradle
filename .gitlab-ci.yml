stages: 
 - build
 - linting
 - test
 - deploy

variables:
  # DJANGO_CONFIG: "test"
  POSTGRES_DB: "cradledb"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_HOST: "postgres"
  MINIO_ENDPOINT: "" # placeholder
  MINIO_ROOT_USER: "" # placeholder
  MINIO_ROOT_PASSWORD: "" # placeholder
  MINIO_SECURE: false
  ALLOWED_HOSTS: "*"
  PIPENV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/packages"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CI_REGISTRY_USER: "cradle"
  CI_REGISTRY_PASSWORD: "YR6NCZ6BvAotJ94"
  CI_REGISTRY: "registry.yigit.run"

default:
  image: python:3.11
  services:
    - name: postgres:16.2
  cache:
    paths:
      - $CI_PROJECT_DIR/.cache/packages
      - $CI_PROJECT_DIR/.cache/pip
  before_script:
    - pip install pipenv
    - pipenv lock 
    - pipenv sync

# Static analysis
flake8: 
  stage: linting
  script:  
    - pipenv run python3 -m flake8 --verbose .

# Make migrations 
migrations:
  stage: build
  script:
    - pipenv run python3 manage.py makemigrations
    - pipenv run python3 manage.py migrate
    - pipenv run python3 manage.py check
  artifacts: 
    paths: 
      - $CI_PROJECT_DIR/*/migrations/*
    expire_in: 2 days
    
# Code quality
codequality: 
  stage: build
  script:  
    - pipenv run mypy --no-error-summary > mypy-out.txt || true
    - pipenv run mypy-gitlab-code-quality < mypy-out.txt > codequality.json
  artifacts:
    when: always
    reports:
      codequality: codequality.json

# Testing
django-tests:
  stage: test
  script:
    - pipenv run python3 manage.py migrate
    - pipenv run coverage run manage.py test
    - pipenv run coverage report
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"

deploy:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev"'
    - if: '$CI_COMMIT_REF_NAME == "main"'
  allow_failure: true
  before_script: []
  cache:
  image: docker:20.10.16
  stage: deploy
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/cradle/backend:latest .
    - docker push $CI_REGISTRY/cradle/backend:latest
# Reference: https://stackoverflow.com/questions/55359804/gitlab-ci-npm-doesnt-like-the-cached-node-modules

stages:
  - build
  - lint
  - test

# global cache settings for all jobs
# Ensure compatibility with the install job
# goal: the install job loads the cache and
# all other jobs can only use it
cache:
  # most npm libraries will only have 1 entry for the base project deps
  - &global_cache_node_mods
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
    policy: pull  # prevent subsequent jobs from modifying cache


install:
  image: node:14
  stage: .pre
  cache:
    # Mimic &global_cache_node_mods config but override policy
    # to allow this job to update the cache at the end of the job
    # and only update if it was a successful job (#5)
    - <<: *global_cache_node_mods
      when: on_success
      policy: pull-push

    # store npm cache for all branches (stores download pkg.tar.gz's)
    # will not be necessary for any other job
    - key: ${CI_JOB_NAME}
      # must be inside $CI_PROJECT_DIR for gitlab-runner caching (#3)
      paths:
        - .npm/
      when: on_success
      policy: pull-push

  script:
    # - npm ci --cache .npm --prefer-offline
    - npm i


build:
  stage: build
  image: node:14
  script:
    - npm run build
  artifacts:
    paths:
      - out/

eslint:
  stage: lint
  image: node:14
  needs:
    - job: build
      artifacts: true 
  script:
    - npx eslint ./
  allow_failure: true

jest:
  stage: test
  image: node:14
  needs:
    - job: build
      artifacts: true
  script:
    - npm test

# Reference: https://stackoverflow.com/questions/55359804/gitlab-ci-npm-doesnt-like-the-cached-node-modules

image: node:20.12.2

stages:
    - build
    - lint
    - test
    - deploy

cache:
    - &global_cache_node_mods
      key:
          files:
              - package-lock.json
      paths:
          - node_modules/
      policy: pull # prevent subsequent jobs from modifying cache

install:
    stage: .pre
    cache:
        # Mimic &global_cache_node_mods config but override policy
        # to allow this job to update the cache at the end of the job
        # and only update if it was a successful job
        - <<: *global_cache_node_mods
          when: on_success
          policy: pull-push

        - key: ${CI_JOB_NAME}
          paths:
              - .npm/
          when: on_success
          policy: pull-push

    script:
        # - npm ls --depth=0 # for debugging
        - npm ci --cache .npm --prefer-offline

    artifacts:
        paths:
            # Artifact node_modules for subsequent jobs
            - node_modules/
        expire_in: 2 days

run-build:
    stage: build
    needs:
        - job: install
          artifacts: true
    script:
        # - npm ls --depth=0 # for debugging
        - npm run build
    artifacts:
        paths:
            - out/
        expire_in: 2 days

run-lint:
    stage: lint
    needs:
        - job: install
          artifacts: true
        - job: run-build
          artifacts: true
    script:
        # - npm ls --depth=0 # for debugging
        - npx eslint ./
    allow_failure: true

run-test:
    stage: test
    needs:
        - job: install
          artifacts: true
        - job: run-build
          artifacts: true
    script:
        # - npm ls --depth=0 # for debugging
        - npm test
    coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

run-deploy:
    stage: deploy
    rules:
        - if: '$CI_COMMIT_REF_NAME == "dev"'
        - if: '$CI_COMMIT_REF_NAME == "main"'
    needs:
        - job: install
          artifacts: true
        - job: run-build
          artifacts: true
    variables:
        RSYNC_PASSWORD: RYDJZHRMPYUjICU
        API_BASE_URL: https://cradle.yigit.run/api
    script:
        - apt-get update -qq && apt-get install -qqy rsync
        - echo "VITE_API_BASE_URL=$API_BASE_URL" > ./src/renderer/.env
        - npm run tailwind
        - npm run render
        - rm ./src/renderer/.env
        - echo "$RSYNC_PASSWORD" > /tmp/rsync_password
        - chmod 600 /tmp/rsync_password
        - rsync -r --password-file=/tmp/rsync_password ./src/renderer/dist/*  rsync://cradle@135.181.118.146:873/frontend/
    allow_failure: true

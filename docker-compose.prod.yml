services:
  minio:
    image: quay.io/minio/minio:RELEASE.2024-07-16T23-46-41Z
    container_name: minio
    command: server /data --console-address "0.0.0.0:9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - /data/minio:/data
    env_file:
      - minio.env
    ports:
      - "127.0.0.1:10000:9000"
      - "127.0.0.1:10001:9001"
    networks:
      - cradle_network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file:
      - db.env
    volumes:
      - /data/postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cradle"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cradle_network

  redis:
    image: "redis:alpine"
    networks:
      cradle_demo_network:
        ipv4_address: 192.168.42.7

  celery:
    image: cradle:latest
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: celery
    restart: unless-stopped
    command: pipenv run celery -A cradle worker -Q email,notes
    env_file:
      - cradle.env
    depends_on:
      - postgres
      - minio
    networks:
      - cradle_network

  cradle:
    image: cradle:latest
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: cradle
    restart: always
    env_file:
      - cradle.env
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      -  /var/www/static/:/app/static/
    depends_on:
      - postgres
      - minio
    extra_hosts:
      - "cradle.prodaft.com:172.18.0.1"
    networks:
      - cradle_network


networks:
  cradle_network:

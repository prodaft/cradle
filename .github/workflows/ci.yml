name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  flake8:
    name: Static Analysis - flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv lock
          pipenv sync
      - name: Run flake8
        run: pipenv run python3 -m flake8 --verbose .

#  codequality:
#    name: Code Quality - mypy
#    runs-on: ubuntu-latest
#    needs: migrations
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: "3.11"
#      - name: Install dependencies
#        run: |
#          pip install pipenv
#          pipenv lock
#          pipenv sync
#      - name: Run mypy
#        run: |
#          pipenv run mypy --no-error-summary > mypy-out.txt || true
#          pipenv run mypy-gitlab-code-quality < mypy-out.txt > codequality.json
#      - name: Upload Code Quality Report
#        uses: actions/upload-artifact@v3
#        with:
#          name: code-quality-report
#          path: codequality.json

  tests:
    name: Run Django Tests
    runs-on: ubuntu-latest
    #    needs: codequality
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_DB: "cradledb"
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv lock
          pipenv sync
      - name: Settings Copy
        run: cp cradle/settings_test.py cradle/settings.py
      - name: Apply Migrations
        run: |
          pipenv run python3 manage.py migrate
          pipenv run python3 manage.py check
      - name: Run Tests with Coverage
        run: |
          pipenv run coverage run manage.py test
          pipenv run coverage report

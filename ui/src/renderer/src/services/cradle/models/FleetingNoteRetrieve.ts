/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.9.5 (2.9.5)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileReference } from './FileReference';
import {
    FileReferenceFromJSON,
    FileReferenceFromJSONTyped,
    FileReferenceToJSON,
    FileReferenceToJSONTyped,
} from './FileReference';

/**
 * Serializer for retrieving fleeting notes with optional content truncation.
 * @export
 * @interface FleetingNoteRetrieve
 */
export interface FleetingNoteRetrieve {
    /**
     * 
     * @type {string}
     * @memberof FleetingNoteRetrieve
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof FleetingNoteRetrieve
     */
    readonly content?: string;
    /**
     * 
     * @type {Date}
     * @memberof FleetingNoteRetrieve
     */
    readonly timestamp?: Date;
    /**
     * 
     * @type {Array<FileReference>}
     * @memberof FleetingNoteRetrieve
     */
    readonly files?: Array<FileReference>;
}

/**
 * Check if a given object implements the FleetingNoteRetrieve interface.
 */
export function instanceOfFleetingNoteRetrieve(value: object): value is FleetingNoteRetrieve {
    return true;
}

export function FleetingNoteRetrieveFromJSON(json: any): FleetingNoteRetrieve {
    return FleetingNoteRetrieveFromJSONTyped(json, false);
}

export function FleetingNoteRetrieveFromJSONTyped(json: any, ignoreDiscriminator: boolean): FleetingNoteRetrieve {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'content': json['content'] == null ? undefined : json['content'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileReferenceFromJSON)),
    };
}

export function FleetingNoteRetrieveToJSON(json: any): FleetingNoteRetrieve {
    return FleetingNoteRetrieveToJSONTyped(json, false);
}

export function FleetingNoteRetrieveToJSONTyped(value?: Omit<FleetingNoteRetrieve, 'id'|'content'|'timestamp'|'files'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.9.5 (2.9.5)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntryResponse
 */
export interface EntryResponse {
    /**
     * 
     * @type {number}
     * @memberof EntryResponse
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof EntryResponse
     */
    name: string;
    /**
     * Description of the entry
     * @type {string}
     * @memberof EntryResponse
     */
    description?: string | null;
    /**
     * Type of the entry (e.g., entity, artifact)
     * @type {string}
     * @memberof EntryResponse
     */
    type: string;
    /**
     * Subtype for the entry
     * @type {string}
     * @memberof EntryResponse
     */
    subtype: string;
    /**
     * Color associated with the entry class
     * @type {string}
     * @memberof EntryResponse
     */
    color?: string | null;
}

/**
 * Check if a given object implements the EntryResponse interface.
 */
export function instanceOfEntryResponse(value: object): value is EntryResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('subtype' in value) || value['subtype'] === undefined) return false;
    return true;
}

export function EntryResponseFromJSON(json: any): EntryResponse {
    return EntryResponseFromJSONTyped(json, false);
}

export function EntryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'type': json['type'],
        'subtype': json['subtype'],
        'color': json['color'] == null ? undefined : json['color'],
    };
}

export function EntryResponseToJSON(json: any): EntryResponse {
    return EntryResponseToJSONTyped(json, false);
}

export function EntryResponseToJSONTyped(value?: Omit<EntryResponse, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'type': value['type'],
        'subtype': value['subtype'],
        'color': value['color'],
    };
}


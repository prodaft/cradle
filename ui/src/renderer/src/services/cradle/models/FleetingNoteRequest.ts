/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.8.0 (2.8.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileReferenceRequest } from './FileReferenceRequest';
import {
    FileReferenceRequestFromJSON,
    FileReferenceRequestFromJSONTyped,
    FileReferenceRequestToJSON,
    FileReferenceRequestToJSONTyped,
} from './FileReferenceRequest';

/**
 * Serializer for fleeting notes. This bypasses the normal note processing pipeline
 * and is used for quick note taking without entity references.
 * @export
 * @interface FleetingNoteRequest
 */
export interface FleetingNoteRequest {
    /**
     * 
     * @type {string}
     * @memberof FleetingNoteRequest
     */
    content: string;
    /**
     * 
     * @type {Array<FileReferenceRequest>}
     * @memberof FleetingNoteRequest
     */
    files?: Array<FileReferenceRequest>;
}

/**
 * Check if a given object implements the FleetingNoteRequest interface.
 */
export function instanceOfFleetingNoteRequest(value: object): value is FleetingNoteRequest {
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function FleetingNoteRequestFromJSON(json: any): FleetingNoteRequest {
    return FleetingNoteRequestFromJSONTyped(json, false);
}

export function FleetingNoteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FleetingNoteRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileReferenceRequestFromJSON)),
    };
}

export function FleetingNoteRequestToJSON(json: any): FleetingNoteRequest {
    return FleetingNoteRequestToJSONTyped(json, false);
}

export function FleetingNoteRequestToJSONTyped(value?: FleetingNoteRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(FileReferenceRequestToJSON)),
    };
}


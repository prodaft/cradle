/* tslint:disable */
/* eslint-disable */
/**
 * CRADLE
 * Threat Intelligence Knowledge Management
 *
 * The version of the OpenAPI document: 2.7.1 (2.7.1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntryClassSerializerMinimal
 */
export interface EntryClassSerializerMinimal {
    /**
     * * `entity` - Entity
     * * `artifact` - Artifact
     * @type {string}
     * @memberof EntryClassSerializerMinimal
     */
    type: EntryClassSerializerMinimalTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EntryClassSerializerMinimal
     */
    subtype: string;
    /**
     * 
     * @type {string}
     * @memberof EntryClassSerializerMinimal
     */
    color?: string;
}


/**
 * @export
 */
export const EntryClassSerializerMinimalTypeEnum = {
    Entity: 'entity',
    Artifact: 'artifact'
} as const;
export type EntryClassSerializerMinimalTypeEnum = typeof EntryClassSerializerMinimalTypeEnum[keyof typeof EntryClassSerializerMinimalTypeEnum];


/**
 * Check if a given object implements the EntryClassSerializerMinimal interface.
 */
export function instanceOfEntryClassSerializerMinimal(value: object): value is EntryClassSerializerMinimal {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('subtype' in value) || value['subtype'] === undefined) return false;
    return true;
}

export function EntryClassSerializerMinimalFromJSON(json: any): EntryClassSerializerMinimal {
    return EntryClassSerializerMinimalFromJSONTyped(json, false);
}

export function EntryClassSerializerMinimalFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntryClassSerializerMinimal {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'subtype': json['subtype'],
        'color': json['color'] == null ? undefined : json['color'],
    };
}

export function EntryClassSerializerMinimalToJSON(json: any): EntryClassSerializerMinimal {
    return EntryClassSerializerMinimalToJSONTyped(json, false);
}

export function EntryClassSerializerMinimalToJSONTyped(value?: EntryClassSerializerMinimal | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'subtype': value['subtype'],
        'color': value['color'],
    };
}

